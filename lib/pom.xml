<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>it.albertus</groupId>
	<artifactId>acodec-dependencies</artifactId>
	<version>1.0.0</version>
	<packaging>pom</packaging>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<dependencies.compile.common.directory>compile/common</dependencies.compile.common.directory>
		<dependencies.runtime.directory>runtime</dependencies.runtime.directory>
		<dependencies.provided.directory>provided</dependencies.provided.directory>
		<dependencies.test.directory>test</dependencies.test.directory>
		<dependencies.src.directory>src</dependencies.src.directory>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.2</version>
				<executions>
					<execution>
						<id>copy-dependencies-compile</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${dependencies.compile.common.directory}</outputDirectory>
							<excludeTransitive>true</excludeTransitive>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
					<execution>
						<id>copy-dependencies-compile-sources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${dependencies.compile.common.directory}/${dependencies.src.directory}</outputDirectory>
							<excludeTransitive>true</excludeTransitive>
							<classifier>sources</classifier>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
					<execution>
						<id>copy-dependencies-runtime</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${dependencies.runtime.directory}</outputDirectory>
							<excludeTransitive>true</excludeTransitive>
							<excludeScope>compile</excludeScope>
						</configuration>
					</execution>
					<execution>
						<id>copy-dependencies-runtime-sources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${dependencies.runtime.directory}/${dependencies.src.directory}</outputDirectory>
							<excludeTransitive>true</excludeTransitive>
							<classifier>sources</classifier>
							<excludeScope>compile</excludeScope>
						</configuration>
					</execution>
					<execution>
						<id>copy-dependencies-provided</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${dependencies.provided.directory}</outputDirectory>
							<excludeTransitive>true</excludeTransitive>
							<includeScope>provided</includeScope>
						</configuration>
					</execution>
					<execution>
						<id>copy-dependencies-provided-sources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${dependencies.provided.directory}/${dependencies.src.directory}</outputDirectory>
							<excludeTransitive>true</excludeTransitive>
							<classifier>sources</classifier>
							<includeScope>provided</includeScope>
						</configuration>
					</execution>
					<execution>
						<id>copy-dependencies-test</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${dependencies.test.directory}</outputDirectory>
							<excludeTransitive>true</excludeTransitive>
							<excludeScope>runtime</excludeScope>
						</configuration>
					</execution>
					<execution>
						<id>copy-dependencies-test-sources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${dependencies.test.directory}/${dependencies.src.directory}</outputDirectory>
							<classifier>sources</classifier>
							<excludeTransitive>true</excludeTransitive>
							<excludeScope>runtime</excludeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<phase>package</phase>
						<configuration>
							<target>
								<delete verbose="true">
									<fileset dir="${dependencies.test.directory}">
										<present present="both" targetdir="${dependencies.provided.directory}" />
									</fileset>
									<fileset dir="${dependencies.runtime.directory}">
										<present present="both" targetdir="${dependencies.test.directory}" />
									</fileset>
								</delete>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>pre-clean</id>
						<phase>initialize</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<filesets>
								<fileset>
									<directory>${dependencies.compile.common.directory}</directory>
									<includes>
										<include>**/*</include>
									</includes>
									<excludes>
										<exclude>**/*nebula*</exclude>
									</excludes>
								</fileset>
								<fileset>
									<directory>${dependencies.runtime.directory}</directory>
									<includes>
										<include>**/*</include>
									</includes>
								</fileset>
								<fileset>
									<directory>${dependencies.provided.directory}</directory>
									<includes>
										<include>**/*</include>
									</includes>
								</fileset>
								<fileset>
									<directory>${dependencies.test.directory}</directory>
									<includes>
										<include>**/*</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</execution>
					<execution>
						<id>post-clean</id>
						<phase>package</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0-M3</version>
				<executions>
					<execution>
						<id>enforce-bytecode-version</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<enforceBytecodeVersion>
									<maxJdkVersion>${maven.compiler.target}</maxJdkVersion>
								</enforceBytecodeVersion>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>extra-enforcer-rules</artifactId>
						<version>1.3</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.8.1</version>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>display-property-updates</goal>
							<goal>display-dependency-updates</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>albertus82-github</id>
			<url>https://albertus82.github.io/maven</url>
		</repository>
	</repositories>

	<dependencies>
		<!-- Compile -->
		<dependency>
			<groupId>it.albertus</groupId>
			<artifactId>jface-utils</artifactId>
			<version>17.3.0</version>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk15on</artifactId>
			<version>1.68</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.15</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.8.0</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.platform</groupId>
			<artifactId>org.eclipse.core.commands</artifactId>
			<version>3.9.800</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.platform</groupId>
			<artifactId>org.eclipse.core.jobs</artifactId>
			<version>3.10.1100</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.platform</groupId>
			<artifactId>org.eclipse.equinox.common</artifactId>
			<version>3.14.100</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.platform</groupId>
			<artifactId>org.eclipse.osgi</artifactId>
			<version>3.16.200</version>
		</dependency>
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
			<version>4.6.1</version>
		</dependency>
		<dependency>
			<groupId>org.reflections</groupId>
			<artifactId>reflections</artifactId>
			<version>0.9.12</version>
		</dependency>

		<!-- Provided -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.18</version>
			<scope>provided</scope>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>
